01 Question: 1037번

양수 A가 N의 진짜 약수가 되려면, N이 A의 배수이고, A가 1과 N이 아니어야 한다. 어떤 수 N의 진짜 약수가 모두 주어질 때, N을 구하는 프로그램을 작성하시오.
----------------------------------------------------------------------------
01 MySolution: 1037번

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;
int com(int i, int j)
{
    return i < j;
}
int main()
{
    int n, result;
    cin >> n;
    vector<int> num;
    for (int i = 0; i < n; i++)
    {
        int N;
        cin >> N;
        num.push_back(N);
    }
    sort(num.begin(), num.end(), com);
    if (num.size() != 1) //
    {
        result = num[0] * num[num.size() - 1];
    }
    else
    {
        result = num[0] * num[0];
    }
    cout << result;
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

02 Question: 25192번

알고리즘 입문방 오픈 채팅방에서는 새로운 분들이 입장을 할 때마다 곰곰티콘을 사용해 인사를 한다. 이를 본 문자열 킬러 임스는 채팅방의 기록을 수집해 그 중 곰곰티콘이 사용된 횟수를 구해 보기로 했다.

ENTER는 새로운 사람이 채팅방에 입장했음을 나타낸다. 그 외는 채팅을 입력한 유저의 닉네임을 나타낸다. 닉네임은 숫자 또는 영문 대소문자로 구성되어 있다.

새로운 사람이 입장한 이후 처음 채팅을 입력하는 사람은 반드시 곰곰티콘으로 인사를 한다. 그 외의 기록은 곰곰티콘을 쓰지 않은 평범한 채팅 기록이다.

채팅 기록 중 곰곰티콘이 사용된 횟수를 구해보자!
----------------------------------------------------------------------------
02 MySolution: 25192번

#include <iostream>
#include <set>
#include <string>
#include <vector>

using namespace std;

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  int N;
  cin >> N;
  set<string> s;
  int ans = 0;
  string user;
  cin >> user;
  
  for (int i = 0; i < N - 1; i++) {
    cin >> user;
    if (user == "ENTER") {
      ans += s.size();
      s.clear();
    }
    else{
      s.insert(user);  
    }
  }
  ans += s.size();
  cout << ans;
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

03 Question: 26069번

총총이는 친구 곰곰이의 소개로 제2회 곰곰컵에 출연할 기회를 얻었다!

총총이는 자신의 묘기인 무지개 댄스를 선보여, 여러분의 환심을 사려 한다. 이 댄스는 중독성이 강하기 때문에, 한번 보게 된 사람은 모두 따라 하게 돼버린다.

무지개 댄스를 추는 총총 2마리

사람들이 만난 기록이 시간 순서대로 
$N$개 주어진다. (총총이는 토끼이지만 이 문제에서는 편의상 사람이라고 가정한다.)

무지개 댄스를 추지 않고 있던 사람이 무지개 댄스를 추고 있던 사람을 만나게 된다면, 만난 시점 이후로 무지개 댄스를 추게 된다.

기록이 시작되기 이전 무지개 댄스를 추고 있는 사람은 총총이 뿐이라고 할 때, 마지막 기록 이후 무지개 댄스를 추는 사람이 몇 명인지 구해보자!
----------------------------------------------------------------------------
03 MySolution: 26069번

#include <iostream>
#include <set>
using namespace std;

int main() {
	set<string> arr{ "ChongChong" };
	int n;
	cin >> n;

	while (n--) {
		string a, b;
		cin >> a >> b;
		if (arr.find(a) != arr.end() || arr.find(b) != arr.end()) {
			arr.insert(b);
			arr.insert(a);
		}		
	}
	cout << arr.size();
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

04 Question: 2108번

수를 처리하는 것은 통계학에서 상당히 중요한 일이다. 통계학에서 N개의 수를 대표하는 기본 통계값에는 다음과 같은 것들이 있다. 단, N은 홀수라고 가정하자.

산술평균 : N개의 수들의 합을 N으로 나눈 값
중앙값 : N개의 수들을 증가하는 순서로 나열했을 경우 그 중앙에 위치하는 값
최빈값 : N개의 수들 중 가장 많이 나타나는 값
범위 : N개의 수들 중 최댓값과 최솟값의 차이
N개의 수가 주어졌을 때, 네 가지 기본 통계값을 구하는 프로그램을 작성하시오.
----------------------------------------------------------------------------
04 MySolution: 2108번

#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
using namespace std;
vector<int> arr;
int main() {
    int num,tmp,range,middle = 0,most_val,mean = 0;
    int most = -9999;
    int number[8001] = {0,};
    bool not_first = false;
    cin >> num;
    for(int i = 0; i < num; i++)
    {
        cin >> tmp;
        arr.push_back(tmp);
        mean += tmp;
        number[tmp+4000]++;
    }
    sort(arr.begin(),arr.end());
    for(int i = 0; i < 8001; i++)
    {
        if(number[i] == 0)
            continue;
        if(number[i] == most)
        {
            if(not_first)
            {
                most_val = i - 4000;
                not_first = false;
            }
        }
        if(number[i] > most)
        {
            most = number[i];
            most_val = i - 4000;
            not_first = true;
        }
    }
    middle = arr[arr.size()/2];
    mean = round((float)mean / num);
    range = arr.back() - arr.front();
    cout << mean << '\n' << middle << '\n' << most_val << '\n' << range;

----------------------------------------------------------------------------
----------------------------------------------------------------------------

05 Question: 20920번

화은이는 이번 영어 시험에서 틀린 문제를 바탕으로 영어 단어 암기를 하려고 한다. 그 과정에서 효율적으로 영어 단어를 외우기 위해 영어 단어장을 만들려 하고 있다. 화은이가 만들고자 하는 단어장의 단어 순서는 다음과 같은 우선순위를 차례로 적용하여 만들어진다.

자주 나오는 단어일수록 앞에 배치한다.
해당 단어의 길이가 길수록 앞에 배치한다.
알파벳 사전 순으로 앞에 있는 단어일수록 앞에 배치한다
 
$M$보다 짧은 길이의 단어의 경우 읽는 것만으로도 외울 수 있기 때문에 길이가 
$M$이상인 단어들만 외운다고 한다. 화은이가 괴로운 영단어 암기를 효율적으로 할 수 있도록 단어장을 만들어 주자.
----------------------------------------------------------------------------
05 MySolution: 20920번

#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;

int main()
{
	ios::sync_with_stdio(false); cin.tie(nullptr);

	int N, M;
	string str;
	map<std::string, int> m;

	cin >> N >> M;

	while (N--)
	{
		cin >> str;

		if (str.size() >= M)
			m[str]++;
	}

	vector<pair<string, int>> v(m.begin(), m.end());
	sort(v.begin(), v.end(), [](pair<string,int> const& l, pair<string, int> const& r)
		{
			if (l.second != r.second)
				return l.second > r.second;

			else if (l.first.length() != r.first.length())
				return l.first.length() > r.first.length();

			else
				return l.first < r.first;
		});

	for (auto& val : v)
		cout << val.first << '\n';
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------
