01 Question: 11279번

널리 잘 알려진 자료구조 중 최대 힙이 있다. 최대 힙을 이용하여 다음과 같은 연산을 지원하는 프로그램을 작성하시오.

배열에 자연수 x를 넣는다.
배열에서 가장 큰 값을 출력하고, 그 값을 배열에서 제거한다.
프로그램은 처음에 비어있는 배열에서 시작하게 된다.
----------------------------------------------------------------------------
01 MySolution: 11279번

#include <iostream>
#include <queue>
#include <vector>
using namespace std;
 
int main(){
    ios::sync_with_stdio(false);
    vector<int> result;
    int n, x;
    cin >> n;
 
    priority_queue<int> q;
    for (int i = 0; i < n; i++){
        cin >> x;
        if(x!=0){
            q.push(x);
        }else{
            if(q.empty()){
                result.push_back(0);
            }else{
                result.push_back(q.top());
                q.pop();
            }
        }
    }
    for (int i = 0; i < result.size(); i++){
        cout << result[i] << '\n';
    }
        return 0;
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

02 Question: 1927번

널리 잘 알려진 자료구조 중 최소 힙이 있다. 최소 힙을 이용하여 다음과 같은 연산을 지원하는 프로그램을 작성하시오.

배열에 자연수 x를 넣는다.
배열에서 가장 작은 값을 출력하고, 그 값을 배열에서 제거한다.
프로그램은 처음에 비어있는 배열에서 시작하게 된다.
----------------------------------------------------------------------------
02 MySolution: 1927번

#include<iostream>
#include<queue>

using namespace std;

int N;

priority_queue<int, vector<int>, greater<int>> p_queue;

int main() {

	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	cin >> N;

	for (int i = 0; i < N; i++) {
		int temp;
		cin >> temp;

		if (temp == 0) {
			if (p_queue.empty()) {
				cout << 0 << "\n";
			}
			else {
				cout << p_queue.top() << "\n";
				p_queue.pop();
			}
		}
		else {
			p_queue.push(temp);
		}
	}

	return 0;

}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

03 Question: 11286번

절댓값 힙은 다음과 같은 연산을 지원하는 자료구조이다.

배열에 정수 x (x ≠ 0)를 넣는다.
배열에서 절댓값이 가장 작은 값을 출력하고, 그 값을 배열에서 제거한다. 절댓값이 가장 작은 값이 여러개일 때는, 가장 작은 수를 출력하고, 그 값을 배열에서 제거한다.
프로그램은 처음에 비어있는 배열에서 시작하게 된다.
----------------------------------------------------------------------------
03 MySolution: 11286번

#include <iostream>
#include <queue>
#include <algorithm>

using namespace std;

struct compare
{
    bool operator()(int iNum1, int iNum2)
    {
        int iFirst = abs(iNum1);
        int iSecond = abs(iNum2);

        if (iFirst == iSecond)
        {
            return iNum1 > iNum2;
        }
        else
        {
            return iFirst > iSecond;
        }
    }
};

int iN = 0;

priority_queue<int, vector<int>, compare> que;

int main(void)
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    cin >> iN;

    for (int i = 0; i < iN; ++i)
    {
        int iNumber = 0;

        cin >> iNumber;

        if (iNumber == 0)
        {
            if (que.empty())
                cout << "0" << '\n';
            else
            {
                cout << que.top() << '\n';
                que.pop();
            }
        }
        else
        {
            que.emplace(iNumber);

        }
    }

    return 0;
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------
