01 Question: 10815번

숫자 카드는 정수 하나가 적혀져 있는 카드이다. 상근이는 숫자 카드 N개를 가지고 있다. 정수 M개가 주어졌을 때, 이 수가 적혀있는 숫자 카드를 상근이가 가지고 있는지 아닌지를 구하는 프로그램을 작성하시오.
----------------------------------------------------------------------------
01 MySolution: 10815번

#include<iostream>
#include<algorithm>

using namespace std;

int main(){
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int M, N, num;

    cin >> M;
    int *arr = new int[M];
    for(int i = 0; i < M; i++){
        cin >> arr[i];
    }
    
    sort(arr, arr + M);

    cin >> N;
    for(int i = 0; i < N; i++){
        cin >> num;
        if(binary_search(arr, arr + M, num)){
            cout << '1' << ' ';
        }
        else{
            cout << '0' << ' ';
        }
    }
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

02 Question: 14425번

총 N개의 문자열로 이루어진 집합 S가 주어진다.

입력으로 주어지는 M개의 문자열 중에서 집합 S에 포함되어 있는 것이 총 몇 개인지 구하는 프로그램을 작성하시오.
----------------------------------------------------------------------------
02 MySolution: 14425번

#include <iostream>
#include <map>
using namespace std;
map<string, bool> m;
int N, M;
string str;
int res = 0;

int main(void)
{
	cin >> N >> M;
	for (int i = 0; i < N; i++)
	{
		cin >> str;
		m.insert(pair<string, bool>(str, true));
	}

	for (int i = 0; i < M; i++)
	{
		cin >> str;
		if (m[str]==true)
			res++;
	}
	cout << res;

}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

03 Question: 7785번

상근이는 세계적인 소프트웨어 회사 기글에서 일한다. 이 회사의 가장 큰 특징은 자유로운 출퇴근 시간이다. 따라서, 직원들은 반드시 9시부터 6시까지 회사에 있지 않아도 된다.

각 직원은 자기가 원할 때 출근할 수 있고, 아무때나 퇴근할 수 있다.

상근이는 모든 사람의 출입카드 시스템의 로그를 가지고 있다. 이 로그는 어떤 사람이 회사에 들어왔는지, 나갔는지가 기록되어져 있다. 로그가 주어졌을 때, 현재 회사에 있는 모든 사람을 구하는 프로그램을 작성하시오.
----------------------------------------------------------------------------
03 MySolution: 7785번

#include <iostream>
#include <map>
using namespace std;
 
int main(){
    
    cin.tie(NULL);
    ios_base::sync_with_stdio(false);
    
    map<string, string, greater<>> m;
    int n; cin >> n;
    for(int i = 0; i<n; i++){
        string name, EorL;
        
        cin >> name >> EorL;
        m[name] = EorL;
        
    }
    
    map<string, string>::iterator it;
    for(it = m.begin(); it!=m.end(); it++){
        if(it->second == "enter"){
            cout << it->first << "\n";
        }
    }
        
    return 0;
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

04 Question: 1620번

첫째 줄에는 도감에 수록되어 있는 포켓몬의 개수 N이랑 내가 맞춰야 하는 문제의 개수 M이 주어져. N과 M은 1보다 크거나 같고, 100,000보다 작거나 같은 자연수인데, 자연수가 뭔지는 알지? 모르면 물어봐도 괜찮아. 나는 언제든지 질문에 답해줄 준비가 되어있어.

둘째 줄부터 N개의 줄에 포켓몬의 번호가 1번인 포켓몬부터 N번에 해당하는 포켓몬까지 한 줄에 하나씩 입력으로 들어와. 포켓몬의 이름은 모두 영어로만 이루어져있고, 또, 음... 첫 글자만 대문자이고, 나머지 문자는 소문자로만 이루어져 있어. 아참! 일부 포켓몬은 마지막 문자만 대문자일 수도 있어. 포켓몬 이름의 최대 길이는 20, 최소 길이는 2야. 그 다음 줄부터 총 M개의 줄에 내가 맞춰야하는 문제가 입력으로 들어와. 문제가 알파벳으로만 들어오면 포켓몬 번호를 말해야 하고, 숫자로만 들어오면, 포켓몬 번호에 해당하는 문자를 출력해야해. 입력으로 들어오는 숫자는 반드시 1보다 크거나 같고, N보다 작거나 같고, 입력으로 들어오는 문자는 반드시 도감에 있는 포켓몬의 이름만 주어져. 그럼 화이팅!!!
----------------------------------------------------------------------------
04 MySolution: 1620번

#include <iostream>
#include <string>
#include <vector>
#include <map>
using namespace std;
//해시맵사용
int main(){
    map<string, int> pokemon;
    vector<string> name;
    int n, m;
    string temp; //포켓몬 이름과 번호가 섞여있으므로 string
    cin >> n >> m;
    vector<string> result; 
    for (int i = 1; i <= n;i++){
        cin >> temp; 
        name.push_back(temp); // 도감번호 주어질때 포켓몬 이름 찾기
        pokemon.insert(make_pair(temp, i)); // 포켓몬 이름이 주어질때 도감번호 빠르게 찾기
    }
    for (int i = 0; i < m; i++){
        cin >> temp;       
        if(temp[0] >= 65 && temp[0] <= 90){ 
        // 포켓몬 이름이 주어진 경우 (맨 앞 문자가 영어 대문자인것을 이용)
            result.push_back(to_string(pokemon[temp]));
            //result 벡터는 string이기 때문에 번호를 string으로 변환해줌
        }
        else // 도감 번호가 주어진 경우
        {
            result.push_back(name[stoi(temp)-1]);
            //입력값은 string 그래서 정수형으로 변환 후 넣어줌
            // -1을 해준 이유는 name배열은 0부터 시작했기 때문 
        }
    }
    for (int i = 0; i < result.size();i++){
        cout << result[i] << '\n'; // 출력
    }
    return 0;
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

05 Question: 10816번

숫자 카드는 정수 하나가 적혀져 있는 카드이다. 상근이는 숫자 카드 N개를 가지고 있다. 정수 M개가 주어졌을 때, 이 수가 적혀있는 숫자 카드를 상근이가 몇 개 가지고 있는지 구하는 프로그램을 작성하시오.
----------------------------------------------------------------------------
05 MySolution: 10816번

#include <iostream>
#include <unordered_map>

using namespace std;

unordered_map <int, int> m;
int N, M, card;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin >> N;
	for (int i = 0; i < N; i++) {
		cin >> card;
		m[card]++;
	}
	cin >> M;
	for (int i = 0; i < M; i++) {
		cin >> card;
		cout << m[card] << " ";
	}
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

06 Question: 1764번

김진영이 듣도 못한 사람의 명단과, 보도 못한 사람의 명단이 주어질 때, 듣도 보도 못한 사람의 명단을 구하는 프로그램을 작성하시오.
----------------------------------------------------------------------------
06 MySolution: 1764번

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <map>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    map<string, int> ma;
    vector<string> vt;
    int n, m;
    cin >> n >> m;
    for (int i = 0; i < n+m; i++) {
        string str;
        cin >> str;
        ma[str]++;
        if (ma[str] > 1)
            vt.push_back(str);
    }
    sort(vt.begin(), vt.end());
    cout << vt.size() << '\n';
    for (auto o : vt)
        cout << o << '\n';

}
----------------------------------------------------------------------------
----------------------------------------------------------------------------

07 Question: 1269번

자연수를 원소로 갖는 공집합이 아닌 두 집합 A와 B가 있다. 이때, 두 집합의 대칭 차집합의 원소의 개수를 출력하는 프로그램을 작성하시오. 두 집합 A와 B가 있을 때, (A-B)와 (B-A)의 합집합을 A와 B의 대칭 차집합이라고 한다.

예를 들어, A = { 1, 2, 4 } 이고, B = { 2, 3, 4, 5, 6 } 라고 할 때,  A-B = { 1 } 이고, B-A = { 3, 5, 6 } 이므로, 대칭 차집합의 원소의 개수는 1 + 3 = 4개이다.
----------------------------------------------------------------------------
07 MySolution: 1269번

#include <algorithm>
#include <iostream>
#include <map>
#include <vector>

void init() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);
}

int main() {
    init();

    int A, B, sum = 0;
    std::cin >> A >> B;

    std::map<int, int> mpA, mpB;

    for (int i = 0; i < A; ++i) {
        int tmp;
        std::cin >> tmp;
        mpA[tmp] = tmp;
    }
    
    for (int i = 0; i < B; ++i) {
        int tmp;
        std::cin >> tmp;
        mpB[tmp] = tmp;
    }

    for (auto it = mpA.begin(); it != mpA.end(); it++)
        if (!mpB[it->first])
            sum++;

    for (auto it = mpB.begin(); it != mpB.end(); it++)
        if (!mpA[it->first])
            sum++;

    std::cout << sum;
}
----------------------------------------------------------------------------
----------------------------------------------------------------------------
