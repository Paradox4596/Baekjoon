01 Question: 1934번

두 자연수 A와 B에 대해서, A의 배수이면서 B의 배수인 자연수를 A와 B의 공배수라고 한다. 이런 공배수 중에서 가장 작은 수를 최소공배수라고 한다. 예를 들어, 6과 15의 공배수는 30, 60, 90등이 있으며, 최소 공배수는 30이다.

두 자연수 A와 B가 주어졌을 때, A와 B의 최소공배수를 구하는 프로그램을 작성하시오.
----------------------------------------------------------------------------
01 MySolution: 1934번

#include <iostream>
using namespace std;
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int T;
	cin >> T;

	int A, B;
	for (int i = 0; i < T; i++) {
		cin >> A >> B;
		int min = 0;
		if (A >= B)
			min = B;
		else
			min = A;

		for (int j = min; j > 0; j--) {
			if (A%j == 0 && B%j==0) {
				cout << A * (B / j) << "\n";
				break;
			}
		}
	}

	return 0;
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

02 Question: 13241번

정수 B에 0보다 큰 정수인 N을 곱해 정수 A를 만들 수 있다면, A는 B의 배수이다.

예:

10은 5의 배수이다 (5*2 = 10)
10은 10의 배수이다(10*1 = 10)
6은 1의 배수이다(1*6 = 6)
20은 1, 2, 4,5,10,20의 배수이다.
다른 예:

2와 5의 최소공배수는 10이고, 그 이유는 2와 5보다 작은 공배수가 없기 때문이다.
10과 20의 최소공배수는 20이다.
5와 3의 최소공배수는 15이다.
당신은 두 수에 대하여 최소공배수를 구하는 프로그램을 작성 하는 것이 목표이다.
----------------------------------------------------------------------------
02 MySolution: 13241번

#include<iostream>
 
using namespace std;
 
void swap(int &a, int &b) {
    int temp = a;
    a = b;
    b = temp;
}
 
long long gcd(int a, int b) {
    int temp;
    if (a < b)
        swap(a, b);
    while (b != 0) {
        temp = a % b;
        a = b;
        b = temp;
    }
    return a;
}
 
long long lcm(long long a, long long b) {
    return (a * b) / gcd(a, b);
}
 
 
int main() {
    long long a, b;
 
    cin >> a >> b;
    cout << lcm(a, b) << endl;
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------
