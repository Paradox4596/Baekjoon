01 Question: 5086번

4 × 3 = 12이다.

이 식을 통해 다음과 같은 사실을 알 수 있다.

3은 12의 약수이고, 12는 3의 배수이다.

4도 12의 약수이고, 12는 4의 배수이다.

두 수가 주어졌을 때, 다음 3가지 중 어떤 관계인지 구하는 프로그램을 작성하시오.

첫 번째 숫자가 두 번째 숫자의 약수이다.
첫 번째 숫자가 두 번째 숫자의 배수이다.
첫 번째 숫자가 두 번째 숫자의 약수와 배수 모두 아니다.

A: 10, B: 11, ..., F: 15, ..., Y: 34, Z: 35
----------------------------------------------------------------------------
01 MySolution: 5086번

#include<iostream>
#include<algorithm>
using namespace std;

int a, b;

int main()
{
	while (1)
	{
		cin >> a >> b;
		if (a == 0 && b == 0) break;

		if (a == 0 || b == 0)
		{
			cout << "neither" << "\n";
		}
		else
		{
			if (a % b == 0) cout << "multiple" << "\n";
			else if (b % a == 0) cout << "factor" << "\n";
			else cout << "neither" << "\n";
		}
		
	}
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

02 Question: 2501번

어떤 자연수 p와 q가 있을 때, 만일 p를 q로 나누었을 때 나머지가 0이면 q는 p의 약수이다. 

6을 예로 들면

6 ÷ 1 = 6 … 0
6 ÷ 2 = 3 … 0
6 ÷ 3 = 2 … 0
6 ÷ 4 = 1 … 2
6 ÷ 5 = 1 … 1
6 ÷ 6 = 1 … 0
그래서 6의 약수는 1, 2, 3, 6, 총 네 개이다.

두 개의 자연수 N과 K가 주어졌을 때, N의 약수들 중 K번째로 작은 수를 출력하는 프로그램을 작성하시오.
----------------------------------------------------------------------------
02 Question: 2501번

#include <iostream>
using namespace std;
int main() {
    int ans[10000] = { 10000 }, N , K, cnt = 0, p = 0;
    cin >> N >> K;
    for(int i = 1; i < 10000; i++)
    {
        if (i > N)
            break;
        if (N % i == 0)
        {
            cnt++;
            ans[p++] = i;
        }
    }
    if (cnt < K)
        cout << "0";
    else
        cout << ans[K - 1];
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

03 Question: 9506번

어떤 숫자 n이 자신을 제외한 모든 약수들의 합과 같으면, 그 수를 완전수라고 한다.

예를 들어 6은 6 = 1 + 2 + 3 으로 완전수이다.

n이 완전수인지 아닌지 판단해주는 프로그램을 작성하라.

두 개의 자연수 N과 K가 주어졌을 때, N의 약수들 중 K번째로 작은 수를 출력하는 프로그램을 작성하시오.
----------------------------------------------------------------------------
03 Question: 9506번

#include <iostream>
using namespace std;
int n, sum, arr[200000], p;
int main() {
    
    while(1)
    {
        cin >> n;
        if (n == -1)
            break;
        for (int i = 1; i < n; i++)
        {
            if (n % i == 0)
            {
                arr[p++] = i;
                sum += i;
            }
        }
        if (sum != n)
        {
            cout << n << " is not perfect." << '\n';
        }
        else if (sum == n)
        {                
            cout << n << " = ";
                for (int i = 0; i < p - 1; i++)
                {

                    cout << arr[i] << " + ";
                    arr[i] = 0;
                }
            cout << arr[p - 1] << '\n';
            arr[p-1] = 0;            
        }    
        p = 0;
        sum = 0;
    }
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

04 Question: 1978번

주어진 수 N개 중에서 소수가 몇 개인지 찾아서 출력하는 프로그램을 작성하시오.
----------------------------------------------------------------------------
04 Question: 1978번

#include <iostream>
using namespace std;

int main() {
	int N, result = 0;
	int temp, cnt = 0;
	cin >> N;
	for (int i = 0; i < N; i++) {
		cin >> temp;
		for (int div = 1; div <= temp; div++) {
			if (temp%div == 0)
				cnt++;
		}
		if (cnt == 2)
			result++;
		cnt = 0;
	}
	cout << result << '\n';
}
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------


05 Question: 2581번

자연수 M과 N이 주어질 때 M이상 N이하의 자연수 중 소수인 것을 모두 골라 이들 소수의 합과 최솟값을 찾는 프로그램을 작성하시오.
예를 들어 M=60, N=100인 경우 60이상 100이하의 자연수 중 소수는 61, 67, 71, 73, 79, 83, 89, 97 총 8개가 있으므로, 이들 소수의 합은 620이고, 최솟값은 61이 된다.
----------------------------------------------------------------------------
05 Question: 2581번

#include <iostream>
#include <vector>
 
using namespace std;
 
int main() {
 
    int m,n;
    cin>>m>>n;
 
    vector<int> vec;
 
    for(int i=m; i<=n; i++){
        int cnt=0;
        for(int j=1; j<=i; j++){
            if(i%j==0){
                cnt++;
            }
        }
        if(cnt==2){
            vec.push_back(i);
        }
    }
 
    int sum=0;
 
    for(int i=0; i<vec.size(); i++){
        sum+=vec[i];
    }
    if(vec.size()==0){
        cout<<"-1";
    }
    else{
        cout<<sum<<"\n"<<vec[0];
    }
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------
