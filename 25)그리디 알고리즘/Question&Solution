01 Question: 11047번

준규가 가지고 있는 동전은 총 N종류이고, 각각의 동전을 매우 많이 가지고 있다.

동전을 적절히 사용해서 그 가치의 합을 K로 만들려고 한다. 이때 필요한 동전 개수의 최솟값을 구하는 프로그램을 작성하시오.
----------------------------------------------------------------------------
01 MySolution: 11047번

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;
int cmp(int a, int b) {
	return a > b;
}
int main() {
	int n, k, ans = 0;
	cin >> n >> k;
	vector<int> v(n);
	for (int i = 0; i < n; i++) {
		cin >> v[i];
	}
	sort(v.begin(), v.end(),cmp);
	for (int i = 0; i < n; i++) {
		while (k - v[i] >= 0) {
			ans++;
			k -= v[i];
		}
	}
	cout << ans << '\n';
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

02 Question: 1931번

한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다. 각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자. 단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 회의의 시작시간과 끝나는 시간이 같을 수도 있다. 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.
----------------------------------------------------------------------------
02 MySolution: 1931번

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main()
{
    int n;
    cin >> n;
    vector<pair<int, int>> list;

    for (int i = 0; i < n; i++)
    {
        int start, end;
        cin >> end >> start;
        list.push_back(make_pair(start, end));
    }
    sort(list.begin(), list.end());

    int time = list[0].first;
    int ans = 1;
    int j = 0;
    for (int i = 1; i <= n; i++)
    {
        if (list[i].second >= time)
        {
            ans++;
            time = list[i].first;
        }
    }
    cout << ans;
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------
