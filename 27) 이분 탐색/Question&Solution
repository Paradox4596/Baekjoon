01 Question: 1920번

N개의 정수 A[1], A[2], …, A[N]이 주어져 있을 때, 이 안에 X라는 정수가 존재하는지 알아내는 프로그램을 작성하시오.
----------------------------------------------------------------------------
01 MySolution: 1920번

#include <iostream>
#include <algorithm>

using namespace std;

int N,M;
int arr[100010];

void binarySearch(int key){
    int start = 0;
    int end = N-1;
    int mid;

    while(end>=start){
        mid =(start+end)/2;
        if(arr[mid]==key){
            cout<<1<<"\n";
            return;
        }else if(arr[mid]>key){
            end = mid - 1;
        }else{
            start = mid + 1;
        }
    }
    cout<<0<<"\n";
    return;
}


int main(){
    
    ios_base::sync_with_stdio(0);cin.tie(0);
    cin>>N;
    int temp;

    for(int i=0;i<N;i++){
        cin>>temp;
        arr[i]=temp;
    }

    sort(arr,arr+N);

    cin>>M;
    for(int i=0;i<M;i++){
        cin>>temp;
        binarySearch(temp);
    }

    return 0;
}

----------------------------------------------------------------------------
----------------------------------------------------------------------------

02 Question: 10816번

숫자 카드는 정수 하나가 적혀져 있는 카드이다. 상근이는 숫자 카드 N개를 가지고 있다. 정수 M개가 주어졌을 때, 이 수가 적혀있는 숫자 카드를 상근이가 몇 개 가지고 있는지 구하는 프로그램을 작성하시오.
----------------------------------------------------------------------------
02 MySolution: 10816번

#include <iostream>
#include <algorithm>

using namespace std;

int arr[500002];
int N, M, card;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin >> N;
	for (int i = 0; i < N; i++) {
		cin >> card;
		arr[i] = card;
	}
	sort(arr, arr + N);

	cin >> M;
	for (int i = 0; i < M; i++) {
		cin >> card;
		cout << upper_bound(arr, arr + N, card) - lower_bound(arr, arr + N, card)<<" ";
	}
}


----------------------------------------------------------------------------
----------------------------------------------------------------------------
